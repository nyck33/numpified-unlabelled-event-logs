import numpy as np
import pandas as pd


startX = ['A', 'C', 'D', 'E', 'F', 'A', 'A', 'A', 'C', 'C', 'D', 'F', 'D', 'A', 'C', 'C', 'A', 'F', 'D', 'D', 'A', 'E', 'A', 'F', 'A', 'G', 'C', 'D', 'C', 'E', 'D', 'F', 'E', 'A', 'C', 'D', 'C', 'F', 'H', 'A', 'C', 'D', 'D', 'F', 'C', 'F', 'A', 'F', 'A', 'C', 'A', 'A', 'C', 'D', 'D', 'C', 'C', 'D', 'D', 'E', 'F', 'F', 'D', 'E', 'E', 'F', 'A', 'A', 'A', 'C', 'D', 'C', 'C', 'F', 'A', 'D', 'F', 'E', 'C', 'D', 'E', 'F', 'G', 'H', 'E', 'D', 'A', 'F', 'B', 'F']
startIntsX = [1, 3, 4, 5, 6, 1, 1, 1, 3, 3, 4, 6, 4, 1, 3, 3, 1, 6, 4, 4, 1, 5, 1, 6, 1, 7, 3, 4, 3, 5, 4, 6, 5, 1, 3, 4, 3, 6, 8, 1, 3, 4, 4, 6, 3, 6, 1, 6, 1, 3, 1, 1, 3, 4, 4, 3, 3, 4, 4, 5, 6, 6, 4, 5, 5, 6, 1, 1, 1, 3, 4, 3, 3, 6, 1, 4, 6, 5, 3, 4, 5, 6, 7, 8, 5, 4, 1, 6, 2, 6]
N = len(startX)
D = ['o', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'x']
startIntsD = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

Ddict = {D[i]:i for i in range(len(D))}
revDdict = {i:D[i] for i in range(len(D))}

#gMInitDict = {'o': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'A': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'B': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'C': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'D': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'E': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'F': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'G': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'H': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}, 'x': {'o': 0.0, 'A': 0.0, 'B': 0.0, 'C': 0.0, 'D': 0.0, 'E': 0.0, 'F': 0.0, 'G': 0.0, 'H': 0.0, 'x': 0.0}}
zerosGMArr = np.zeros((len(D), len(D)), dtype=np.float32)

MStartDict = {} # same as gmStartDict


################################################################################################
################################################################################################
#mimestCombined top 
xSolStart = [1, 3, 4, 5, 6, 1, 1, 1, 3, 3, 4, 6, 4, 1, 3, 3, 1, 6, 4, 4, 1, 5, 1, 6, 1, 7, 3, 4, 3, 5, 4, 6, 5, 1, 3, 4, 3, 6, 8, 1, 3, 4, 4, 6, 3, 6, 1, 6, 1, 3, 1, 1, 3, 4, 4, 3, 3, 4, 4, 5, 6, 6, 4, 5, 5, 6, 1, 1, 1, 3, 4, 3, 3, 6, 1, 4, 6, 5, 3, 4, 5, 6, 7, 8, 5, 4, 1, 6, 2, 6]
sSolStart =  []
gMDictSolStart =  {0: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 1: {0: 0.0, 1: 0.25, 2: 0.0, 3: 0.4, 4: 0.05, 5: 0.05, 6: 0.2, 7: 0.05, 8: 0.0, 9: 0.0}, 2: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0, 9: 0.0}, 3: {0: 0.0, 1: 0.10526315789473684, 2: 0.0, 3: 0.21052631578947367, 4: 0.47368421052631576, 5: 0.05263157894736842, 6: 0.15789473684210525, 7: 0.0, 8: 0.0, 9: 0.0}, 4: {0: 0.0, 1: 0.15789473684210525, 2: 0.0, 3: 0.21052631578947367, 4: 0.21052631578947367, 5: 0.21052631578947367, 6: 0.21052631578947367, 7: 0.0, 8: 0.0, 9: 0.0}, 5: {0: 0.0, 1: 0.2, 2: 0.0, 3: 0.1, 4: 0.2, 5: 0.1, 6: 0.4, 7: 0.0, 8: 0.0, 9: 0.0}, 6: {0: 0.0, 1: 0.375, 2: 0.0625, 3: 0.0625, 4: 0.1875, 5: 0.125, 6: 0.0625, 7: 0.0625, 8: 0.0625, 9: 0.0}, 7: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.5, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.5, 9: 0.0}, 8: {0: 0.0, 1: 0.5, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.5, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 9: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}}
gMSolStart = np.array(
            [[0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,0.        ,0.        ],
            [0.        ,0.25      ,0.        ,0.4       ,0.05      ,0.05      ,
            0.2       ,0.05      ,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            1.        ,0.        ,0.        ,0.        ],
            [0.        ,0.10526316,0.        ,0.21052632,0.47368421,0.05263158,
            0.15789474,0.        ,0.        ,0.        ],
            [0.        ,0.15789474,0.        ,0.21052632,0.21052632,0.21052632,
            0.21052632,0.        ,0.        ,0.        ],
            [0.        ,0.2       ,0.        ,0.1       ,0.2       ,0.1       ,
            0.4       ,0.        ,0.        ,0.        ],
            [0.        ,0.375     ,0.0625    ,0.0625    ,0.1875    ,0.125     ,
            0.0625    ,0.0625    ,0.0625    ,0.        ],
            [0.        ,0.        ,0.        ,0.5       ,0.        ,0.        ,
            0.        ,0.        ,0.5       ,0.        ],
            [0.        ,0.5       ,0.        ,0.        ,0.        ,0.5       ,
            0.        ,0.        ,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,0.        ,0.        ]], dtype=np.float32
            )

NSolStart = {}
DSolStart = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
ySolStart = {}
NSolStart =  90
BEGINSolStart =  0
ENDSolStart =  9

#######################################################################
#####est sources track y to feed t estparams
### track M to from estparams to feed to estsources

# top of estimate:
xStart = ['A', 'C', 'D', 'E', 'F', 'A', 'A', 'A', 'C', 'C', 'D', 'F', 'D', 'A', 'C', 'C', 'A', 'F', 'D', 'D', 'A', 'E', 'A', 'F', 'A', 'G', 'C', 'D', 'C', 'E', 'D', 'F', 'E', 'A', 'C', 'D', 'C', 'F', 'H', 'A', 'C', 'D', 'D', 'F', 'C', 'F', 'A', 'F', 'A', 'C', 'A', 'A', 'C', 'D', 'D', 'C', 'C', 'D', 'D', 'E', 'F', 'F', 'D', 'E', 'E', 'F', 'A', 'A', 'A', 'C', 'D', 'C', 'C', 'F', 'A', 'D', 'F', 'E', 'C', 'D', 'E', 'F', 'G', 'H', 'E', 'D', 'A', 'F', 'B', 'F']
newXStart = [1, 3, 4, 5, 6, 1, 1, 1, 3, 3, 4, 6, 4, 1, 3, 3, 1, 6, 4, 4, 1, 5, 1, 6, 1, 7, 3, 4, 3, 5, 4, 6, 5, 1, 3, 4, 3, 6, 8, 1, 3, 4, 4, 6, 3, 6, 1, 6, 1, 3, 1, 1, 3, 4, 4, 3, 3, 4, 4, 5, 6, 6, 4, 5, 5, 6, 1, 1, 1, 3, 4, 3, 3, 6, 1, 4, 6, 5, 3, 4, 5, 6, 7, 8, 5, 4, 1, 6, 2, 6]
s = []
gM = np.array(
[[0.,         0.,         0.,         0.,         0.,        0.,
  0.,         0.,         0.,         0.        ],
 [0.,         0.16666667, 0.,         0.16666667, 0.16666667, 0.16666667,
  0.16666667, 0.16666667, 0.,         0.       ],
 [0.,         0.,         0.,         0.,         0.,         0.,
  1.,         0.,         0.,         0.        ],
 [0.,         0.2,        0.,         0.2,        0.2,        0.2,
  0.2,        0.,         0.,         0.        ],
 [0.,         0.2,        0.,         0.2,        0.2,        0.2,
  0.2,        0.,         0.,         0.        ],
 [0.,         0.2,        0.,         0.2,        0.2,        0.2,
  0.2,        0.,         0.,         0.        ],
 [0.,         0.125,      0.125,      0.125,      0.125,      0.125,
  0.125,      0.125,      0.125,      0.        ],
 [0.,         0.,         0.,         0.5,        0.,         0.,
  0.,         0.,         0.5,        0.,        ],
 [0.,         0.5,        0.,         0.,         0.,         0.5,
  0.,         0.,         0.,         0.        ],
 [0.,         0.,         0.,         0.,         0.,         0.,
  0.,         0.,         0.,         0.,        ],])

MStart = np.array(
[[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
 [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],])

gmStartArr = np.array(
        [[0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
        0.        ,0.        ,0.        ,0.        ],
        [0.        ,0.25      ,0.        ,0.4       ,0.05      ,0.05      ,
        0.2       ,0.05      ,0.        ,0.        ],
        [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
        1.        ,0.        ,0.        ,0.        ],
        [0.        ,0.10526316,0.        ,0.21052632,0.47368421,0.05263158,
        0.15789474,0.        ,0.        ,0.        ],
        [0.        ,0.15789474,0.        ,0.21052632,0.21052632,0.21052632,
        0.21052632,0.        ,0.        ,0.        ],
        [0.        ,0.2       ,0.        ,0.1       ,0.2       ,0.1       ,
        0.4       ,0.        ,0.        ,0.        ],
        [0.        ,0.375     ,0.0625    ,0.0625    ,0.1875    ,0.125     ,
        0.0625    ,0.0625    ,0.0625    ,0.        ],
        [0.        ,0.        ,0.        ,0.5       ,0.        ,0.        ,
        0.        ,0.        ,0.5       ,0.        ],
        [0.        ,0.5       ,0.        ,0.        ,0.        ,0.5       ,
        0.        ,0.        ,0.        ,0.        ],
        [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
        0.        ,0.        ,0.        ,0.        ]], dtype=np.float32)



yprep = {1: [1, 3, 4, 5, 6, 7, 8], 2: [1, 3, 4, 6, 7, 8, 5], 3: [1, 3, 4, 6, 2], 4: [1, 3, 4, 5, 6], 5: [1, 3, 4, 5, 6], 6: [1, 3, 4, 5, 6], 7: [1, 3, 4, 6], 8: [1, 3, 4, 6], 9: [1, 3, 4, 6], 10: [1, 3, 4, 5, 6], 11: [1, 3, 4, 6], 12: [1, 3, 4, 5, 6], 13: [1, 3, 4, 5, 6], 14: [1, 3, 4, 6], 15: [1, 3, 4, 5, 6], 16: [1, 3, 4, 5, 6], 17: [1, 3, 4, 6], 18: [1, 3, 4], 19: [1, 3, 4], 20: [1]}
yprepArr = [[1, 3, 4, 5, 6, 7, 8],
 [1, 3, 4, 6, 7, 8, 5],
 [1, 3, 4, 6, 2],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4],
 [1, 3, 4],
 [1]]
#1: Estimating parameters...
M1 = {0: {0: 0.0, 1: 1.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 1: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.95, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.05}, 2: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 1.0}, 3: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 4: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.47368421052631576, 6: 0.42105263157894735, 7: 0.0, 8: 0.0, 9: 0.10526315789473684}, 5: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.9, 7: 0.0, 8: 0.0, 9: 0.1}, 6: {0: 0.0, 1: 0.0, 2: 0.058823529411764705, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.11764705882352941, 8: 0.0, 9: 0.8235294117647058}, 7: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}, 8: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.5, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.5}, 9: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}}
m1Arr = np.array(
    [[0.        ,1.        ,0.        ,0.        ,0.        ,0.        ,
    0.        ,0.        ,0.        ,0.        ],
    [0.        ,0.        ,0.        ,0.95      ,0.        ,0.        ,
    0.        ,0.        ,0.        ,0.05      ],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
    0.        ,0.        ,0.        ,1.        ],
    [0.        ,0.        ,0.        ,0.        ,1.        ,0.        ,
    0.        ,0.        ,0.        ,0.        ],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.47368421,
    0.42105263,0.        ,0.        ,0.10526316],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
    0.9       ,0.        ,0.        ,0.1       ],
    [0.        ,0.        ,0.05882353,0.        ,0.        ,0.        ,
    0.        ,0.11764706,0.        ,0.82352941],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
    0.        ,0.        ,1.        ,0.        ],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.5       ,
    0.        ,0.        ,0.        ,0.5       ],
    [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
    0.        ,0.        ,0.        ,0.        ]], dtype=np.float32)
    
#1: Computing source sequence...
y1 =  {1: [1, 3, 4, 5, 6], 2: [1, 3, 4, 6], 3: [1, 3, 4, 6], 4: [1, 3, 4, 5, 6], 5: [1, 3, 4, 5, 6], 6: [1, 3, 4, 5, 6], 7: [1, 3, 4, 6], 8: [1, 3, 4, 6], 9: [1, 3, 4, 6], 10: [7, 8, 5, 6], 11: [1, 3, 4, 6], 12: [1, 3, 4, 5, 6], 13: [1, 3, 4, 5, 6], 14: [1, 3, 4, 6], 15: [1, 3, 4, 5, 6], 16: [1, 3, 4, 5, 6], 17: [1, 3, 4], 18: [1, 3, 4], 19: [1, 3, 4], 20: [1, 3, 4], 21: [7, 8, 5, 6], 22: [1], 23: [2]}
y1Arr = [[1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [7, 8, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4],
 [1, 3, 4],
 [1, 3, 4],
 [1, 3, 4],
 [7, 8, 5, 6],
 [1],
 [2]]

#2: Estimating parameters...
M2 = {0: {0: 0.0, 1: 0.8695652173913043, 2: 0.043478260869565216, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.08695652173913043, 8: 0.0, 9: 0.0}, 1: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.95, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.05}, 2: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 1.0}, 3: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 4: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.42105263157894735, 6: 0.3684210526315789, 7: 0.0, 8: 0.0, 9: 0.21052631578947367}, 5: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0, 9: 0.0}, 6: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 1.0}, 7: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}, 8: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 9: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}}
m2Arr = np.array(
            [[0.        ,0.86956522,0.04347826,0.        ,0.        ,0.        ,
            0.        ,0.08695652,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.95      ,0.        ,0.        ,
            0.        ,0.        ,0.        ,0.05      ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,0.        ,1.        ],
            [0.        ,0.        ,0.        ,0.        ,1.        ,0.        ,
            0.        ,0.        ,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.42105263,
            0.36842105,0.        ,0.        ,0.21052632],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            1.        ,0.        ,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,0.        ,1.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,1.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,1.        ,
            0.        ,0.        ,0.        ,0.        ],
            [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
            0.        ,0.        ,0.        ,0.        ]], dtype=np.float32)

#2: Computing source sequence...
y2 = {1: [1, 3, 4, 5, 6], 2: [1, 3, 4, 6], 3: [1, 3, 4, 6], 4: [1, 3, 4, 5, 6], 5: [1, 3, 4, 5, 6], 6: [1, 3, 4, 5, 6], 7: [1, 3, 4, 6], 8: [1, 3, 4, 6], 9: [1, 3, 4, 6], 10: [7, 8, 5, 6], 11: [1, 3, 4, 6], 12: [1, 3, 4, 5, 6], 13: [1, 3, 4, 5, 6], 14: [1, 3, 4, 6], 15: [1, 3, 4, 5, 6], 16: [1, 3, 4, 5, 6], 17: [1, 3, 4], 18: [1, 3, 4], 19: [1, 3, 4], 20: [1, 3, 4], 21: [7, 8, 5, 6], 22: [1], 23: [2]}
y2Arr = [[1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 6],
 [7, 8, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4, 5, 6],
 [1, 3, 4],
 [1, 3, 4],
 [1, 3, 4],
 [1, 3, 4],
 [7, 8, 5, 6],
 [1],
 [2]]
####################################################################################
MSolutionD = {0: {0: 0.0, 1: 0.8695652173913043, 2: 0.043478260869565216, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.08695652173913043, 8: 0.0, 9: 0.0}, 1: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.95, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.05}, 2: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 1.0}, 3: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 4: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.42105263157894735, 6: 0.3684210526315789, 7: 0.0, 8: 0.0, 9: 0.21052631578947367}, 5: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0, 9: 0.0}, 6: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 1.0}, 7: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}, 8: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}, 9: {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0}}
MSolArr = np.array([[0.        ,0.86956522,0.04347826,0.        ,0.        ,0.        ,
  0.        ,0.08695652,0.        ,0.        ],
 [0.        ,0.        ,0.        ,0.95      ,0.        ,0.        ,
  0.        ,0.        ,0.        ,0.05      ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
  0.        ,0.        ,0.        ,1.        ],
 [0.        ,0.        ,0.        ,0.        ,1.        ,0.        ,
  0.        ,0.        ,0.        ,0.        ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.42105263,
  0.36842105,0.        ,0.        ,0.21052632],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
  1.        ,0.        ,0.        ,0.        ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
  0.        ,0.        ,0.        ,1.        ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
  0.        ,0.        ,1.        ,0.        ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,1.        ,
  0.        ,0.        ,0.        ,0.        ],
 [0.        ,0.        ,0.        ,0.        ,0.        ,0.        ,
  0.        ,0.        ,0.        ,0.        ]], dtype=np.float32)
y ={}
ySolutionD = {1: [1, 3, 4, 5, 6], 2: [1, 3, 4, 6], 3: [1, 3, 4, 6], 4: [1, 3, 4, 5, 6], 5: [1, 3, 4, 5, 6], 6: [1, 3, 4, 5, 6], 7: [1, 3, 4, 6], 8: [1, 3, 4, 6], 9: [1, 3, 4, 6], 10: [7, 8, 5, 6], 11: [1, 3, 4, 6], 12: [1, 3, 4, 5, 6], 13: [1, 3, 4, 5, 6], 14: [1, 3, 4, 6], 15: [1, 3, 4, 5, 6], 16: [1, 3, 4, 5, 6], 17: [1, 3, 4], 18: [1, 3, 4], 19: [1, 3, 4], 20: [1, 3, 4], 21: [7, 8, 5, 6], 22: [1], 23: [2]}
YSolutionArr = [[1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 6], [7, 8, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4], [1, 3, 4], [1, 3, 4], [1, 3, 4], [7, 8, 5, 6], [1], [2]]
################################################################################################

#estsources

#iter 1
'''
[-9,-9,-9,-9,-9, 1, 3, 4, 1, 3, 1, 1, 3, 5, 4, 5, 6, 3, 4, 5, 7, 1, 8, 4,
  9, 1, 6, 6, 7, 3, 7, 5, 4,10, 8, 8, 9, 6,11,11,10, 9,10, 7,11, 8,12, 9,
 13,12,14,15,13,11,12,14,15,13,14, 5,10,11,15, 6, 7,12,16,17,18,16,16,17,
 18,13,19,17,14, 8,19,18, 9,15, 3,20,10,19,20,16,21,17]

'''

s1 = [1, 1, 1, 1, 1, 2, 3, 4, 2, 3, 2, 2, 3, 5, 4, 5, 6, 3, 4, 5, 7, 4, 8, 4, 9, 1, 6, 6, 7, 5, 7, 5, 6, 10, 8, 8, 9, 6, 1, 11, 10, 9, 10, 7, 11, 8, 12, 9, 13, 12, 14, 15, 13, 11, 12, 14, 15, 13, 14, 10, 10, 11, 15, 12, 13, 12, 16, 17, 18, 16, 16, 17, 18, 13, 19, 17, 14, 15, 19, 18, 16, 15, 2, 2, 2, 19, 20, 16, 3, 17]
sArr1 = np.array(s1)
y1 = [[1, 3, 4, 5, 6, 7, 8], [1, 3, 4, 6, 7, 8, 5], [1, 3, 4, 6, 2], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4], [1, 3, 4], [1]]
yArr1 = np.array(y1)

#iter 2

s2 = [1, 1, 1, 1, 1, 2, 3, 4, 2, 3, 2, 2, 3, 5, 4, 5, 6, 3, 4, 5, 7, 4, 8, 4, 9, 10, 6, 6, 7, 5, 7, 5, 6, 11, 8, 8, 9, 6, 10, 12, 11, 9, 11, 7, 12, 8, 13, 9, 14, 13, 15, 16, 14, 12, 13, 15, 16, 14, 15, 10, 10, 11, 16, 12, 13, 12, 17, 18, 19, 17, 17, 18, 19, 13, 20, 18, 14, 15, 20, 19, 16, 15, 21, 21, 21, 20, 22, 16, 23, 21]

y2 = [[1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 6], [7, 8, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4], [1, 3, 4], [1, 3, 4], [1, 3, 4], [7, 8, 5, 6], [1], [2]]


#iter 3
s3 = [1, 1, 1, 1, 1, 2, 3, 4, 2, 3, 2, 2, 3, 5, 4, 5, 6, 3, 4, 5, 7, 4, 8, 4, 9, 10, 6, 6, 7, 5, 7, 5, 6, 11, 8, 8, 9, 6, 10, 12, 11, 9, 11, 7, 12, 8, 13, 9, 14, 13, 15, 16, 14, 12, 13, 15, 16, 14, 15, 10, 10, 11, 16, 12, 13, 12, 17, 18, 19, 17, 17, 18, 19, 13, 20, 18, 14, 15, 20, 19, 16, 15, 21, 21, 21, 20, 22, 16, 23, 21]

y3 = [[1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 6], [7, 8, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4], [1, 3, 4], [1, 3, 4], [1, 3, 4], [7, 8, 5, 6], [1], [2]]

#iter 4

s4 = [1, 1, 1, 1, 1, 2, 3, 4, 2, 3, 2, 2, 3, 5, 4, 5, 6, 3, 4, 5, 7, 4, 8, 4, 9, 10, 6, 6, 7, 5, 7, 5, 6, 11, 8, 8, 9, 6, 10, 12, 11, 9, 11, 7, 12, 8, 13, 9, 14, 13, 15, 16, 14, 12, 13, 15, 16, 14, 15, 10, 10, 11, 16, 12, 13, 12, 17, 18, 19, 17, 17, 18, 19, 13, 20, 18, 14, 15, 20, 19, 16, 15, 21, 21, 21, 20, 22, 16, 23, 21]

y4 = [[1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 6], [1, 3, 4, 6], [7, 8, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4, 6], [1, 3, 4, 5, 6], [1, 3, 4, 5, 6], [1, 3, 4], [1, 3, 4], [1, 3, 4], [1, 3, 4], [7, 8, 5, 6], [1], [2]]